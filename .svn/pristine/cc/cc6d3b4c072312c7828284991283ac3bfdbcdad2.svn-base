package org.component_factory;

import org.event_manager.api.MongoUtils;
import org.event_manager.events.Component;
import org.event_manager.events.Event;
import org.event_manager.events.Event.Emotion;

public class EventDisambiguator{

	public void disambiguate(Event event) {

		// Compare event to component context
		Component context = MongoUtils.getComponentContext(event.getTopic());
		Component component = new Component();
		component.setAssociatedEmotions(event.getEmotion());
		component.setTopic(event.getTopic());
		MongoUtils.addComponent(component);
		
		Component updateComponent = null;

		// Compare the new component to the context. Decide if we need to update context
		if (context != null) {
			if (!context.getAssociatedEmotion().equals(component.getAssociatedEmotion()) && !component.getAssociatedEmotion().equals(Emotion.NoOpinion)) {
				System.out.println("Current Context- " + context.getAssociatedEmotion().toString() +" New- " + component.getAssociatedEmotion().toString());
				updateComponent = component;
			}
		} else{
			updateComponent = component;
			
		}

		if (updateComponent != null) {
			MongoUtils.updateComponentContext(component);
			System.out.println("Updated Component: "+ updateComponent.getTopic() + " Emotion:" + updateComponent.getAssociatedEmotion().toString());
		}
	}

}
